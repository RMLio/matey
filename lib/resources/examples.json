[
  {
    "label":"Simple JSON source",
    "icon":"",
    "yarrrml":"prefixes:\n ex: \"http://example.com/\"\n\nmappings:\n  person:\n    sources:\n      - ['data.json~jsonpath', '$.persons[*]']\n    s: http://example.com/$(firstname)\n    po:\n      - [a, foaf:Person]\n      - [ex:name, $(firstname)]",
    "data": [
      {
        "path": "data.json",
        "type": "json",
        "value": "{\n      \"persons\": [\n        {\"firstname\": \"John\", \"lastname\": \"Doe\"},\n        {\"firstname\": \"Jane\", \"lastname\": \"Smith\"},\n        {\"firstname\": \"Sarah\", \"lastname\": \"Bladinck\"}\n      ]\n      }"
      }
    ]
  },
  {
    "label":"Combination of a JSON and a CSV source",
    "icon":"",
    "yarrrml":"prefixes:\n  ex: \"http://example.com/\"\n\nmappings:\n  person:\n    sources:\n      - ['persons.json~jsonpath', '$.persons[*]']\n    s: http://example.com/person/$(firstname)\n    po:\n      - [a, foaf:Person]\n      - [ex:name, $(firstname)]\n      - p: ex:likes\n        o:\n         - mapping: movie\n           condition:\n            function: equal\n            parameters:\n              - [str1, $(movie)]\n              - [str2, $(slug)]\n  movie:\n    sources:\n      - ['movies.csv~csv']\n    s: http://example.com/movie/$(slug)\n    po:\n      - [a, schema:Movie]\n      - [schema:name, $(title)]\n      - [ex:year, $(year)]\n",
    "data": [
      {
        "path":"persons.json",
        "type":"json",
        "value":"{\n        \"persons\": [\n          {\n            \"firstname\": \"John\",\n            \"lastname\": \"Doe\",\n            \"movie\":\"wam\"\n          },\n          {\n            \"firstname\": \"Jane\",\n            \"lastname\": \"Smith\",\n            \"movie\":\"wam\"\n          },\n          {\n            \"firstname\": \"Sarah\",\n            \"lastname\": \"Bladinck\",\n            \"movie\":\"fotr\"\n          }\n        ]\n      }"
      },
      {
        "path":"movies.csv",
        "type":"text",
        "value":"slug,title,year\nsw,Star Wars,1977\nfotr,The Fellowship of the Ring,2001\nwam,We Are Marshall,2006"
      }
    ]
  },
  {
    "label":"Facebook JSON data",
    "icon":"facebook",
    "yarrrml": "prefixes:\n  cocacola-fb: http://coca-cola.com/facebook/\n  emit: http://coca-cola.com/emit/\n  prov-said: http://semweb.datasciencelab.be/ns/prov-said/\n  ov: http://open.vocab.org/terms/\n  tsioc: http://rdfs.org/sioc/types#\n  fabio: http://purl.org/spar/fabio/\n\nbase: http://example.com/base#\n\nsources:\n  api:\n    access: data.json\n    referenceFormulation: jsonpath\n    iterator: \"$.data[*]\"\n\nmappings:\n  facebook_post:\n    source:\n      - api\n    subject: cocacola-fb:$(id)\n    predicateobjects:\n      - [a, [prov:Entity, ov:MicroblogPost, schema:SocialMediaPosting, tsioc:MicroblogPost]]\n      - [[prov:label, schema:articleBody], $(message)]\n      - [schema:mainEntityOfPage, $(permalink_url), schema:URL]\n      - [prov:wasAttributedTo, http://coca-cola.com/#me~iri]\n      - predicate: prov:wasGeneratedBy\n        object:\n          mapping: emit\n          condition:\n            function: equal\n            parameters:\n              - [str1, $(id)]\n              - [str2, $(id)]\n  emit:\n    source:\n      - api\n    subject: emit:$(id)\n    predicateobjects:\n      - [a, prov:Activity]\n      - [prov:type, prov-said:EmitMessage~iri]\n      - [prov:wasStartedBy, http://coca-cola.com/#me~iri]\n      - [[prov:startedAtTime, prov:endedAtTime], $(created_time)]",
    "data": [
      {
        "path":"data.json",
        "type":"json",
        "value":"{\n  \"data\": [\n    {\n      \"created_time\": \"2018-11-21T01:12:24+0000\",\n      \"message\": \"What‚Äôs the one thing that never fails to make you smile? üòÄ #RefreshTheFee\",\n      \"id\": \"820882001277849_313056145953449\",\n      \"permalink_url\": \"https://www.facebook.com/CocaColaUnitedStates/videos/313056145953449/\"\n    },\n    {\n      \"created_time\": \"2018-11-13T01:03:11+0000\",\n      \"message\": \"This #WorldKindnessDay, we‚Äôre spreading a little love and positivity. ‚û°Ô∏è to üòÉ. #RefreshTheFeed\",\n      \"id\": \"820882001277849_2242864155746286\",\n      \"permalink_url\": \"https://www.facebook.com/CocaColaUnitedStates/posts/2242864155746286\"\n    },\n    {\n      \"created_time\": \"2018-11-13T01:02:00+0000\",\n      \"message\": \"Spread kindness. Share the ‚ù§Ô∏èÔ∏è. #WorldKindnessDay #RefreshTheFeed\",\n      \"id\": \"820882001277849_2169022539814557\",\n      \"permalink_url\": \"https://www.facebook.com/CocaColaUnitedStates/videos/2169022539814557/\"\n    }\n  ]\n}"
      }
    ]
  },
  {
    "label":"YARRRML Targets for specifying output",
    "icon":"target",
    "yarrrml":"sources:\n  supergirl-source:\n    access: \"Supergirl.xml\"\n    referenceFormulation: xpath\n    iterator: \"/Supergirl/Character\"\ntargets:\n  target1: [\"/data/dump1.nt~dcat\", \"ntriples\"]\n  target2: [\"/data/dump2.ttl~void\", \"turtle\"]\nmappings:\n  person:\n    sources: supergirl-source\n    subjects:\n      - value: \"http://example.org/$(./@id)\"\n        targets: target1\n    predicateobjects:\n      - predicates:\n        - value: foaf:name\n          targets: target2\n        objects: \"$(./name)\"\n      - predicates: foaf:nickname\n        objects: \"$(./nickname)\"\n    ",
    "data":[
      {
        "path":"Supergirl.xml",
        "type":"xml",
        "value":"<Supergirl>\n  <Character id=\"0\">\n    <name>Kara Danvers</name>\n    <nickname>Supergirl</nickname>\n  </Character>\n  <Character id=\"1\">\n    <name>Alex Danvers</name>\n    <nickname>Sentinel</nickname>\n  </Character>\n  <Character id=\"2\">\n    <name>J'onn J'onzz</name>\n    <nickname>Martian Manhunter</nickname>\n  </Character>\n  <Character id=\"3\">\n    <name>Nia Nal</name>\n    <nickname>Dreamer</nickname>\n  </Character> \n</Supergirl>"
      }
    ]
  },
  {
    "label":"GTFS CSV data",
    "icon":"",
    "yarrrml":"prefixes:\n  rr: http://www.w3.org/ns/r2rml#\n  foaf: http://xmlns.com/foaf/0.1/\n  xsd: http://www.w3.org/2001/XMLSchema#\n  rdfs: http://www.w3.org/2000/01/rdf-schema#\n  dc: http://purl.org/dc/elements/1.1/\n  rev: http://purl.org/stuff/rev#\n  gtfs: http://vocab.gtfs.org/terms#\n  geo: http://www.w3.org/2003/01/geo/wgs84_pos#\n  schema: http://schema.org/\n  dct: http://purl.org/dc/terms/\n  rml: http://semweb.mmlab.be/ns/rml#\n  ql: http://semweb.mmlab.be/ns/ql#\n  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#\n\nmappings:\n  agency:\n    sources:\n      - [AGENCY.csv~csv]\n    s: http://transport.linkeddata.es/madrid/agency/$(agency_id)\n    po:\n      - [a, gtfs:Agency]\n      - [foaf:page, $(agency_url)~iri]\n      - [foaf:name,$(agency_name)]\n      - [gtfs:timeZone,$(agency_timezone)]\n      - [dct:language,$(agency_lang)]\n      - [foaf:phone,$(agency_phone)]\n      - [gtfs:fareUrl,$(agency_fare_url)~iri]\n  routes:\n    sources:\n      - [ROUTES.csv~csv]\n    s: http://transport.linkeddata.es/madrid/metro/routes/$(route_id)\n    po:\n      - [a, gtfs:Route]\n      - [gtfs:shortName, $(route_short_name)]\n      - [gtfs:longName, $(route_long_name)]\n      - [dct:description, $(route_desc)]\n      - [gtfs:routeType, http://transport.linkeddata.es/resource/RouteType/$(route_type)~iri]\n      - [gtfs:routeUrl, $(route_url)~iri]\n      - [gtfs:color, $(route_color)]\n      - [gtfs:textColor, $(route_text_color)]\n      - p: gtfs:agency\n        o:\n          - mapping: agency\n            condition:\n              function: equal\n              parameters:\n                - [str1, $(agency_id)]\n                - [str2, $(agency_id)]",
    "data":[
      {
        "path":"AGENCY.csv",
        "type":"csv",
        "value":"agency_id,agency_name,agency_url,agency_timezone,agency_lang,agency_phone,agency_fare_url\nCRTM,Consorcio Regional de Transportes de Madrid,http://www.crtm.es,Europe/Madrid,es,012,https://www.crtm.es/billetes-y-tarifas\n"
      },
      {
        "path":"ROUTES.csv",
        "type":"csv",
        "value":"route_id,agency_id,route_short_name,route_long_name,route_desc,route_type,route_url,route_color,route_text_color\n4__1___,CRTM,1,Pinar de Chamart√≠n-Valdecarros,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__1___.aspx,2DBEF0,FFFFFF\n4__10___,CRTM,10,Hospital del Norte-Puerta del Sur,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__10___.aspx,005AA9,FFFFFF\n4__11___,CRTM,11,Plaza El√≠ptica-La Fortuna,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__11___.aspx,009B3A,FFFFFF\n4__12___,CRTM,12,MetroSur,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__12___.aspx,A49800,FFFFFF\n4__2___,CRTM,2,Las Rosas-Cuatro Caminos,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__2___.aspx,ED1C24,FFFFFF\n4__3___,CRTM,3,Villaverde Alto-Moncloa,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__3___.aspx,FFD000,000000\n4__4___,CRTM,4,Pinar de Chamart√≠n-Arg√ºelles,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__4___.aspx,B65518,FFFFFF\n4__5___,CRTM,5,Alameda de Osuna-Casa de Campo,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__5___.aspx,8FD400,FFFFFF\n4__6___,CRTM,6,Circular,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__6___.aspx,98989B,FFFFFF\n4__7___,CRTM,7,Hospital del Henares-Pitis,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__7___.aspx,EE7518,FFFFFF\n4__8___,CRTM,8,Nuevos Ministerios - Aeropuerto T4,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__8___.aspx,EC82B1,FFFFFF\n4__9___,CRTM,9,Paco de Luc√≠a-Arganda del Rey,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__9___.aspx,A60084,FFFFFF\n4__R___,CRTM,R,Opera-Pr√≠ncipe P√≠o,,1,http://www.crtm.es/tu-transporte-publico/metro/lineas/4__R___.aspx,FFFFFF,005AA9"
      }
    ]
  },
  {
    "label":"Basic LDES of sensor data",
    "icon":"",
    "yarrrml":"# Generate an initial basic LDES and members.\n\nprefixes:\n  ex: http://example.org/\n  dcterms: http://purl.org/dc/terms/\n\nsources:\n  data-source: [readings-1.csv~csv]\n\ntargets:\n  ldes-target:\n    access: out-ldes.nq\n    type: void\n    serialization: nquads\n    ldes:\n      id: https://example.org/ldes\n      timestampPath: ex:ts\n      versionOfPath: dcterms:isVersionOf\n\nmappings:\n  temperature-reading:\n    sources: data-source\n    subjects:\n      - value: ex:$(SensorID)\n        targets: ldes-target\n\n    po:\n      - [a, ex:Thermometer]\n      - [ex:temp, $(Temperature)]\n      - [ex:ts, $(Timestamp), xsd:dateTime]\n      - [dcterms:isVersionOf, ex:$(SensorID)]\n\n    changeDetection:\n      create:\n        explicit: false\n      update:\n        explicit: false\n        watchedProperties: [$(Temperature)]",
    "data":[
      {
        "path":"readings-1.csv",
        "type":"csv",
        "value":"SensorID,Timestamp,Temperature\n1,2023-01-01T08:00:00,8\n2,2023-01-01T08:00:00,9\n"
      }
    ]
  },
  {
    "label":"LDES generation with change detection",
    "icon":"",
    "yarrrml":"# Only generate members if temperature changes.\n\nprefixes:\n  ex: http://example.org/\n  dcterms: http://purl.org/dc/terms/\n\nsources:\n  data-source: [readings-2.csv~csv]\n\ntargets:\n  ldes-target:\n    access: out-ldes.nq\n    type: void\n    serialization: nquads\n    ldes:\n      id: https://example.org/ldes\n      timestampPath: ex:ts\n      versionOfPath: dcterms:isVersionOf\n\nmappings:\n  temperature-reading:\n    sources: data-source\n    subjects:\n      - value: ex:$(SensorID)\n        targets: ldes-target\n\n    po:\n      - [a, ex:Thermometer]\n      - [ex:temp, $(Temperature)]\n      - [ex:ts, $(Timestamp), xsd:dateTime]\n      - [dcterms:isVersionOf, ex:$(SensorID)]\n\n    changeDetection:\n      create:\n        explicit: false\n      update:\n        explicit: false\n        watchedProperties: [$(Temperature)]",
    "data":[
      {
        "path":"readings-2.csv",
        "type":"csv",
        "value":"SensorID,Timestamp,Temperature\n1,2023-01-01T09:00:00,9\n2,2023-01-01T09:00:00,9\n"
      }
    ]
  }
]
